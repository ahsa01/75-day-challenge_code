class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int l = 0;
        int r = nums.size() - 1;
        vector<int> ans(2, -1);
        // find starting position
        while (l <= r) {
            int m = (l + r) / 2;
            if (target == nums[m]) {
                ans[0] = m;
                r = m - 1;
            }
            if (target < nums[m]) {
                r = m - 1;
            } else if (nums[m] < target) {
                l = m + 1;
            }
        }
        if (ans[0] == -1) {
            return ans;
        }
        // find ending position
        l = 0;
        r = nums.size() - 1;
        while (l <= r) {
            int m = (l + r) / 2;
            if (target == nums[m]) {
                ans[1] = m;
                l = m + 1;
            }
            if (target < nums[m]) {
                r = m - 1;
            } else if (nums[m] < target) {
                l = m + 1;
            }
        }
        return ans;
    }
}
